{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { UPDATE_PRODUCTS, ADD_TO_CART, UPDATE_CART_QUANTITY, REMOVE_FROM_CART, ADD_MULTIPLE_TO_CART, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY, CLEAR_CART, TOGGLE_CART } from \"./actions\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n\n    case ADD_TO_CART:\n      return { ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product]\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return { ...state,\n        cart: [...state.cart, ...action.products]\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return { ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n\n          return product;\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n      return { ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return { ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return { ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  _s();\n\n  return useReducer(reducer, initialState);\n}\n\n_s(useProductReducer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");","map":{"version":3,"sources":["C:/Code/Huntress-Handcrafted/client/src/utils/reducers.js"],"names":["useReducer","UPDATE_PRODUCTS","ADD_TO_CART","UPDATE_CART_QUANTITY","REMOVE_FROM_CART","ADD_MULTIPLE_TO_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","CLEAR_CART","TOGGLE_CART","reducer","state","action","type","products","cartOpen","cart","product","map","_id","purchaseQuantity","newState","filter","length","categories","currentCategory","useProductReducer","initialState"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SACIC,eADJ,EAEIC,WAFJ,EAGIC,oBAHJ,EAIIC,gBAJJ,EAKIC,oBALJ,EAMIC,iBANJ,EAOIC,uBAPJ,EAQIC,UARJ,EASIC,WATJ,QAUO,WAVP;AAYA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,eAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;AAFP,OAAP;;AAKJ,SAAKZ,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHI,QAAAA,QAAQ,EAAE,IAFP;AAGHC,QAAAA,IAAI,EAAE,CAAC,GAAGL,KAAK,CAACK,IAAV,EAAgBJ,MAAM,CAACK,OAAvB;AAHH,OAAP;;AAMJ,SAAKZ,oBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHK,QAAAA,IAAI,EAAE,CAAC,GAAGL,KAAK,CAACK,IAAV,EAAgB,GAAGJ,MAAM,CAACE,QAA1B;AAFH,OAAP;;AAKJ,SAAKX,oBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHI,QAAAA,QAAQ,EAAE,IAFP;AAGHC,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWE,GAAX,CAAeD,OAAO,IAAI;AAC5B,cAAIL,MAAM,CAACO,GAAP,KAAeF,OAAO,CAACE,GAA3B,EAAgC;AAC5BF,YAAAA,OAAO,CAACG,gBAAR,GAA2BR,MAAM,CAACQ,gBAAlC;AACH;;AACD,iBAAOH,OAAP;AACH,SALK;AAHH,OAAP;;AAWJ,SAAKb,gBAAL;AACI,UAAIiB,QAAQ,GAAGV,KAAK,CAACK,IAAN,CAAWM,MAAX,CAAkBL,OAAO,IAAI;AACxC,eAAOA,OAAO,CAACE,GAAR,KAAgBP,MAAM,CAACO,GAA9B;AACH,OAFc,CAAf;AAIA,aAAO,EACH,GAAGR,KADA;AAEHI,QAAAA,QAAQ,EAAEM,QAAQ,CAACE,MAAT,GAAkB,CAFzB;AAGHP,QAAAA,IAAI,EAAEK;AAHH,OAAP;;AAMJ,SAAKb,UAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHI,QAAAA,QAAQ,EAAE,KAFP;AAGHC,QAAAA,IAAI,EAAE;AAHH,OAAP;;AAMJ,SAAKP,WAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHI,QAAAA,QAAQ,EAAE,CAACJ,KAAK,CAACI;AAFd,OAAP;;AAKJ,SAAKT,iBAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHa,QAAAA,UAAU,EAAE,CAAC,GAAGZ,MAAM,CAACY,UAAX;AAFT,OAAP;;AAKJ,SAAKjB,uBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHc,QAAAA,eAAe,EAAEb,MAAM,CAACa;AAFrB,OAAP;;AAKJ;AACI,aAAOd,KAAP;AArER;AAuEH,CAxEM;AA0EP,OAAO,SAASe,iBAAT,CAA2BC,YAA3B,EAAyC;AAAA;;AAC5C,SAAO3B,UAAU,CAACU,OAAD,EAAUiB,YAAV,CAAjB;AACH;;GAFeD,iB","sourcesContent":["import { useReducer } from \"react\";\r\nimport {\r\n    UPDATE_PRODUCTS,\r\n    ADD_TO_CART,\r\n    UPDATE_CART_QUANTITY,\r\n    REMOVE_FROM_CART,\r\n    ADD_MULTIPLE_TO_CART,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY,\r\n    CLEAR_CART,\r\n    TOGGLE_CART\r\n} from \"./actions\";\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: [...action.products],\r\n            };\r\n\r\n        case ADD_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: true,\r\n                cart: [...state.cart, action.product],\r\n            };\r\n\r\n        case ADD_MULTIPLE_TO_CART:\r\n            return {\r\n                ...state,\r\n                cart: [...state.cart, ...action.products],\r\n            };\r\n\r\n        case UPDATE_CART_QUANTITY:\r\n            return {\r\n                ...state,\r\n                cartOpen: true,\r\n                cart: state.cart.map(product => {\r\n                    if (action._id === product._id) {\r\n                        product.purchaseQuantity = action.purchaseQuantity\r\n                    }\r\n                    return product\r\n                })\r\n            };\r\n\r\n        case REMOVE_FROM_CART:\r\n            let newState = state.cart.filter(product => {\r\n                return product._id !== action._id;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                cartOpen: newState.length > 0,\r\n                cart: newState\r\n            };\r\n\r\n        case CLEAR_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: false,\r\n                cart: []\r\n            };\r\n\r\n        case TOGGLE_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: !state.cartOpen\r\n            };\r\n\r\n        case UPDATE_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: [...action.categories],\r\n            };\r\n\r\n        case UPDATE_CURRENT_CATEGORY:\r\n            return {\r\n                ...state,\r\n                currentCategory: action.currentCategory\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n    return useReducer(reducer, initialState)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}